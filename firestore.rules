rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function hasRole(role) {
      return isAuthenticated() && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    function isAdmin() {
      return hasRole('admin');
    }
    
    function isSeller() {
      return hasRole('seller') || isAdmin();
    }
    
    // Users collection
    match /users/{userId} {
      // Users can read their own profile
      // Admins can read all profiles
      allow read: if isOwner(userId) || isAdmin();
      
      // Only admins can create users directly (normal users are created through Auth)
      allow create: if isAdmin();
      
      // Users can update their own basic info
      // Admins can update any user
      allow update: if isOwner(userId) || isAdmin();
      
      // Only admins can delete users
      allow delete: if isAdmin();
    }
    
    // Products collection
    match /products/{productId} {
      // Anyone can read products
      allow read: if true;
      
      // Only sellers and admins can create products
      allow create: if isSeller() && 
                      request.resource.data.sellerId == request.auth.uid;
      
      // Sellers can only update/delete their own products
      // Admins can update/delete any product
      allow update, delete: if isAdmin() || 
                             (isSeller() && 
                              resource.data.sellerId == request.auth.uid);
    }
    
    // Orders collection
    match /orders/{orderId} {
      // Customers can read their own orders
      // Sellers can read orders that contain their products
      // Admins can read all orders
      allow read: if isAdmin() || 
                   isOwner(resource.data.customerId) || 
                   (isSeller() && resource.data.sellerIds.hasAny([request.auth.uid]));
      
      // Anyone authenticated can create an order
      allow create: if isAuthenticated() && 
                      request.resource.data.customerId == request.auth.uid;
      
      // Sellers can update order status for their orders
      // Admins can update any order
      allow update: if isAdmin() || 
                     (isSeller() && 
                      resource.data.sellerIds.hasAny([request.auth.uid]) && 
                      request.resource.data.diff(resource.data).affectedKeys().hasOnly(['status']));
      
      // Only admins can delete orders
      allow delete: if isAdmin();
    }
  }
} 